\select@language {english}
\select@language {croatian}
\select@language {german}
\select@language {english}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {6.1}{\ignorespaces Classification CS}}{16}{table.6.1}
\contentsline {table}{\numberline {6.2}{\ignorespaces Classification CS}}{16}{table.6.2}
\contentsline {table}{\numberline {6.3}{\ignorespaces Compound}}{16}{table.6.3}
\contentsline {table}{\numberline {6.4}{\ignorespaces Classification CT}}{16}{table.6.4}
\contentsline {table}{\numberline {6.5}{\ignorespaces Callsite Classification for paramcount}}{16}{table.6.5}
\contentsline {table}{\numberline {6.6}{\ignorespaces Calltarget Classification}}{17}{table.6.6}
\contentsline {table}{\numberline {6.7}{\ignorespaces Coumpound table}}{17}{table.6.7}
\contentsline {table}{\numberline {6.8}{\ignorespaces MAtching table}}{17}{table.6.8}
\contentsline {table}{\numberline {6.9}{\ignorespaces policy evaluation}}{17}{table.6.9}
\contentsline {table}{\numberline {6.10}{\ignorespaces param wideness}}{17}{table.6.10}
\contentsline {table}{\numberline {6.11}{\ignorespaces tabelle 7}}{17}{table.6.11}
\contentsline {table}{\numberline {6.12}{\ignorespaces tabelle 7}}{18}{table.6.12}
\contentsline {table}{\numberline {6.13}{\ignorespaces matching}}{19}{table.6.13}
\contentsline {table}{\numberline {6.14}{\ignorespaces pairings compares}}{19}{table.6.14}
\contentsline {table}{\numberline {6.15}{\ignorespaces policy baseline}}{19}{table.6.15}
\contentsline {table}{\numberline {6.16}{\ignorespaces Performance Tabble, more better is a bar chart here!}}{20}{table.6.16}
\contentsline {table}{\numberline {6.17}{\ignorespaces TypeShild vs TypeArmor}}{20}{table.6.17}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {13.1}{\ignorespaces Table shows the quality of structural matching provided by our automated verify and test environment, regarding callsites and calltargets. Missmatches are basically the result of discrepancies between llvm/IR and the actual binary }}{40}{table.13.1}
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {table}{\numberline {16.1}{\ignorespaces Table shows the overestimation of the parameter count in matched callsites that is happening in our implementation of the basline implementation of the COUNT policy, with -x denoting problematic callsites}}{45}{table.16.1}
\contentsline {table}{\numberline {16.2}{\ignorespaces Table shows the underestimation of the parameter count in matched calltargets that is happening in our implementation of the basline implementation of the COUNT policy, with -x denoting problematic calltargets}}{45}{table.16.2}
\contentsline {table}{\numberline {16.3}{\ignorespaces Table shows the ability of inferring the parameter count for callsites and calltargets exhibited by our implementation of the COUNT policy. }}{46}{table.16.3}
\contentsline {table}{\numberline {16.4}{\ignorespaces Table shows the ability of inferring the voidness for callsites and calltargets exhibited by our implementation of the COUNT policy. }}{46}{table.16.4}
\addvspace {10\p@ }
\contentsline {table}{\numberline {17.1}{\ignorespaces Table that shows how much our address taken analysis differs from the ground truth provided by our clang/llvm passs}}{49}{table.17.1}
\contentsline {table}{\numberline {17.2}{\ignorespaces Table shows the effect of the various AT filtering versions on the policies AT, COUNT* (theoretical limit of COUNT policy) and TYPE* (theoretical limit of TYPE policy) for all of our test targets}}{50}{table.17.2}
