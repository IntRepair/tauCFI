\chapter{Evaluation}
\label{chapter:Evaluation}
We evaluated our tool X with Y popular servers, by instrumenting them with our tool.
We performed runtime performance test with the following applications.

Our Evaluation aims to answer the following research questions:
\begin{enumerate}
 \item \textbf{R1:} How efective is out tool in securing binary programs against the COOP attack?
 
 \item \textbf{R2:} How precise is our tool in detecting the types of the caller/caller pairs?
 
 \item \textbf{R3:} What are the instumentation overheads imposer by our tool and how many caller/called pairs 
 are secured by our tool?
 
 \item \textbf{R4:} Against which kind of attacks can our tool secure programs?
 
 \item \textbf{R5:} How many caller/callee pairs remain unprotected after applying our tool?
 
 \item \textbf{R6:} What are the Limitations of our Tool?
 
 \item \textbf{R7:} List is not exauhustive. Give another relevant research question.
 
\end{enumerate}

\textbf{Comparison methods.} Example: We used UBSAN , the state-of-art
tool for detecting bad-casting bugs, as our comparison tar-
get of C A V ER . Also, We used C A V ER - NAIVE , which dis-
abled the two optimization techniques described in ยง4.4,
to show their effectiveness on runtime performance opti-
mization.

\textbf{Experimental setup.} Example: All experiments were run on
Ubuntu 13.10 (Linux Kernel 3.11) with a quad-core 3.40
GHz CPU (Intel Xeon E3-1245), 16 GB RAM, and 1 TB
SSD-based storage.


\section{Pre}




\section{Classification}
\subsection{Callsites}
overestimation param count. table.
number of parameters.

\subsection{Calltargets}
underestimation param table.

\section{Patching Policies}
Two types of diagrams. Table 5 from TypeArmor and a CDF to compare param count and param type. (baseline).
\subsection{AT}
\subsection{ParamCount}
table, cdf, baseline vs. server. approximations.

\subsection{ParamType}
table, cdf, baseline vs. server. approximations.

\section{Security Evaluation}

\section{Performance}
spec 2006.