% Generated by IEEEtran.bst, version: 1.13 (2008/09/30)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{NVD:ACE}
U.~S. NVD-Reports, ``Over 800 arbitrary code executions reported from jan.'08
  to may'17,'' 2017, \url{https://goo.gl/5uv47n}.

\bibitem{schuster:coop}
F.~Schuster, T.~Tendyck, C.~Liebchen, L.~Davi, A.-R. Sadeghi, and T.~Holz,
  ``Counterfeit object-oriented programming,'' in \emph{Proceedings of the IEEE
  Symposium on Security and Privacy (S\&P)}, 2015.

\bibitem{crane:readactor++}
S.~Crane, S.~Volckaert, F.~Schuster, C.~Liebchen, P.~Larsen, L.~Davi, A.-R.
  Sadeghi, T.~Holz, B.~De~Sutter, and M.~Franz, ``It's a trap: Table
  randomization and protection against function-reuse attacks,'' in
  \emph{Proceedings of the ACM SIGSAC Conference on Computer and Communications
  Security (CCS)}, 2015.

\bibitem{subversive-c:lettner}
J.~Lettner, B.~Kollenda, A.~Homescu, P.~Larsen, F.~Schuster, L.~Davi, A.-R.
  Sadeghi, T.~Holz, and M.~Franz, ``Subversive-c: Abusing and protecting
  dynamic message dispatch,'' in \emph{USENIX Annual Technical Conference
  (USENIX ATC)}, 2016.

\bibitem{ctf:coop}
``Bluelotus team, bctf challenge: bypass vtable read-only checks,'' 2015.

\bibitem{loop:oriented}
B.~Lan, Y.~Li, H.~Sun, C.~Su, Y.~Liu, and Q.~Zeng, ``Loop-oriented programming:
  A new code reuse attack to bypass modern defenses,'' in \emph{IEEE
  Trustcom/BigDataSE/ISPA}, 2015.

\bibitem{abadi:cfi2}
M.~Abadi, M.~Budiu, {\'U}.~Erlingsson, and J.~Ligatti, ``Control flow
  integrity,'' in \emph{Proceedings of the 12th ACM Conference on Computer and
  Communications Security (CCS)}, 2005.

\bibitem{abadi:cfi}
M.~Abadi, M.~Budiu, {\'U}.~Erlingsson, and J.~Ligatti, ``Control flow integrity
  principles, implementations, and applications,'' in \emph{ACM Transactions on
  Information and System Security (TISSEC)}, 2009.

\bibitem{alias:undecidable}
G.~Ramalingam, ``The undecidability of aliasing,'' in \emph{ACM Transactions on
  Programming Languages and Systems (TOPLAS)}, 1994.

\bibitem{safedispatch:jang}
D.~Jang, T.~Tatlock, and S.~Lerner, ``Safedispatch: Securing c++ virtual calls
  from memory corruption attacks,'' in \emph{Symposium on Network and
  Distributed System Security (NDSS)}, 2014.

\bibitem{haller:shrinkwrap}
I.~Haller, E.~Goktas, E.~Athanasopoulos, G.~Portokalidis, and H.~Bos,
  ``Shrinkwrap: Vtable protection without loose ends,'' in \emph{Annual
  Computer Security Applications Conference (ACSAC)}, 2015.

\bibitem{bounov:interleaving}
D.~Bounov, R.~Gökhan~Kici, and S.~Lerner, ``Protecting c++ dynamic dispatch
  through vtable interleaving,'' in \emph{Symposium on Network and Distributed
  System Security (NDSS)}, 2016.

\bibitem{vtv:tice}
C.~Tice, T.~Roeder, P.~Collingbourne, S.~Checkoway, {\'U}.~Erlingsson,
  L.~Lozano, and G.~Pike, ``Enforcing forward-edge control-flow integrity in
  gcc and llvm,'' in \emph{Proceedings of the USENIX conference on Security
  (USENIX SEC)}, 2014.

\bibitem{ccfir:zhang}
C.~Zhang, T.~Wei, Z.~Chen, L.~Duan, L.~Szekeres, S.~McCamant, D.~Song, and
  W.~Zou, ``Practical control flow integrity \& randomization for binary
  executables,'' in \emph{Proceedings of the IEEE Symposium on Security and
  Privacy (S\&P)}, 2013.

\bibitem{zhang:usenix}
M.~Zhang and R.~Sekar, ``Control flow integrity for cots binaries,'' in
  \emph{Proceedings of the USENIX conference on Security (USENIX SEC)}, 2013.

\bibitem{vfuard:aravind}
A.~Prakash, X.~Hu, and H.~Yin, ``Strict protection for virtual function calls
  in cots c++ binaries,'' in \emph{Symposium on Network and Distributed System
  Security (NDSS)}, 2015.

\bibitem{vtint:zhang}
C.~Zhang, C.~Song, K.~C. Zhijie, Z.~Chen, and D.~Song, ``vtint: Protecting
  virtual function tables\' integrity,'' in \emph{Proceedings of the Symposium
  on Network and Distributed System Security (NDSS)}, 2015.

\bibitem{vci:asiaccs}
M.~Elsabagh, D.~Fleck, and A.~Stavrou, ``Strict virtual call integrity checking
  for c ++ binaries,'' in \emph{ACM Asia Conference on Computer and
  Communications Security (ASIACCS)}, 2017.

\bibitem{marx}
A.~Pawlowski, M.~Contag, V.~van~der Veen, C.~Ouwehand, T.~Holz, H.~Bos,
  E.~Athanasopoulos, and C.~Giuffrida, ``Marx : Uncovering class hierarchies in
  c++ programs,'' in \emph{Symposium on Network and Distributed System Security
  (NDSS)}, 2017.

\bibitem{veen:typearmor}
V.~v.~d. Veen, E.~Goktas, M.~Contag, A.~Pawlowski, X.~Chen, S.~Rawat, H.~Bos,
  T.~Holz, E.~Athanasopoulos, and C.~Giuffrida, ``A tough call: Mitigating
  advanced code-reuse attacks at the binary level,'' in \emph{Proceedings of
  the IEEE Symposium on Security and Privacy (S\&P)}, 2016.

\bibitem{itanium:abi}
``Itanium c++ abi,'' \url{https://mentorembedded.github.io/cxx-abi/abi.html}.

\bibitem{arm:abi}
``C++ abi for the arm architecture,'' 2015,
  \url{http://infocenter.arm.com/help/topic/com.arm.doc.ihi0041e/IHI0041E
  cppabi.pdf}.

\bibitem{microsoft:abi}
``J. gray. c++: Under the hood,'' 1994,
  \url{http://www.openrce.org/articles/files/jangrayhood.pdf}.

\bibitem{volodymyr:cpi}
V.~Kuznetsov, L.~Szekeres, M.~Payer, G.~Candea, R.~Sekar, and D.~Song,
  ``Code-pointer integrity,'' in \emph{Proceedings of the USENIX Symposium on
  Operating Systems Design and Implementation (OSDI)}, 2014.

\bibitem{safestack:bypassing}
\BIBentryALTinterwordspacing
``Bypassing clang’s safestack for fun and profit,'' in \emph{Blackhat
  Europe}, 2016. [Online]. Available:
  \url{https://www.blackhat.com/docs/eu-16/materials/eu-16-Goktas-Bypassing-Clangs-SafeStack.pdf}
\BIBentrySTDinterwordspacing

\bibitem{reprod:nist}
W.~Jansen, ``Directions in security metrics research,'' in \emph{NISTIR 7564},
  2009, \url{http://nvlpubs.nist.gov/nistpubs/Legacy/IR/nistir7564.pdf}.

\bibitem{herley:security}
C.~Herley and P.~C. van Oorschot, ``Science, security, and the elusive goal of
  security as a scientific pursuit,'' in \emph{Proceedings of the IEEE
  Symposium on Security and Privacy (S\&P)}, 2017.

\bibitem{iso:iecN3690}
I.~JTC1/SC22WG21, ``Iso/iec 14882:2013 programming language c++ (n3690),''
  2013, \url{https://isocpp.org/files/papers/N3690.pdf}.

\bibitem{zhang:vtrust}
C.~Zhang, S.~A. Carr, T.~Li, Y.~Ding, C.~Song, M.~Payer, and D.~Song, ``Vtrust:
  Regaining trust on virtual calls,'' in \emph{Symposium on Network and
  Distributed System Security (NDSS)}, 2016.

\bibitem{bernat:dyninst}
A.~R. Bernat and B.~P. Miller, ``Anywhere, any-time binary instrumentation,''
  in \emph{Proceedings of the 10th ACM SIGPLAN-SIGSOFT workshop on Program
  analysis for software tools, (PASTE)}, 2011.

\bibitem{khedker2009data}
U.~Khedker, A.~Sanyal, and B.~Sathe, \emph{Data flow analysis: Theory and
  Practice}.\hskip 1em plus 0.5em minus 0.4em\relax CRC Press, 2009.

\bibitem{function:boundary}
D.~Andriesse, A.~Slowinska, and H.~Bos, ``Compiler-agnostic function detection
  in binaries,'' in \emph{IEEE European Symposium on Security and Privacy
  (EuroS\&P)}, 2017.

\bibitem{dynamorio:drmemory}
``Dynamorio,'' \url{http://dynamorio.org/home.html}.

\bibitem{gawlik}
R.~Gawlik and T.~Holz, ``Towards automated integrity protection of c++ virtual
  function tables in binary programs,'' in \emph{Annual Computer Security
  Applications Conference (ACSAC)}, 2014.

\bibitem{jujutsu}
I.~Evans, F.~Long, U.~Otgonbaatar, H.~Shrobe, M.~Rinard, H.~Okhravi, and
  S.~Sidiroglou-Douskosr, ``Control jujutsu: On the weaknesses of fine-grained
  control flow integrity,'' in \emph{Proceedings of the ACM SIGSAC Conference
  on Computer and Communications Security (CCS)}, 2015.

\bibitem{mcfi:niu}
B.~Niu and G.~Tan, ``Modular control-flow integrity,'' in \emph{ACM Conferece
  on Programming Language Design and Implementation (PLDI)}, 2014.

\bibitem{hafix}
L.~Davi, M.~Hanreich, D.~Paul, A.-R. Sadeghi, P.~Koeberl, D.~Sullivan,
  O.~Arias, and Y.~Jin, ``Hafix: hardware-assisted flow integrity extension,''
  in \emph{Design Automation Conference (DAC)}, 2015.

\bibitem{hafix:bypass}
M.~Theodorides and D.~Wagner, ``Breaking active-set backward-edge cfi,'' in
  \emph{International Symposium on Hardware Oriented Security and Trust
  (HOST)}, 2017.

\bibitem{veen:cfi}
V.~v.~d. Veen, D.~Andriesse, E.~Göktas, B.~Gras, L.~Sambuc, A.~Slowinska,
  H.~Bos, and C.~Giuffrida, ``Practical context-sensiticve cfi,'' in
  \emph{Proceedings of the ACM SIGSAC Conference on Computer and Communications
  Security (CCS)}, 2015.

\bibitem{schuster:raid}
F.~Schuster, T.~Tendyck, C.~Liebchen, L.~Davi, A.-R. Sadeghi, and T.~Holz,
  ``Evaluating the effectiveness of current anti-rop defenses,'' in
  \emph{Proceedings of the International Symposium on Research in Attacks,
  Intrusions, and Defenses (RAID)}, 2014.

\bibitem{intel:cet}
``Intel control-flow enforcement technology,'' 2016,
  \url{https://software.intel.com/sites/default/files/managed/4d/2a/control-flow-enforcement-technology-preview.pdf}.

\bibitem{cfi_survey_payer}
B.~Nathan, S.~A.~Carr, J.~Nash, P.~Larsen, M.~Franz, S.~Brunthaler, and
  M.~Payer, ``Control-flow integrity: Precision, security, and performance,''
  in \emph{ACM Computing Surveys (CSUR)}, 2017.

\end{thebibliography}
