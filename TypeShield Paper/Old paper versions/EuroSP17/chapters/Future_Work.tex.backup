\section{Future Work}
\label{chapter:Future_Work}

\subsubsection{Improving the Structural Matching} 
Improving the structural matching capability is in our opinion the most 
important further venue of research, as we need a reliable way to 
match a ground truth against the resulting binary. This is important 
because it is a prerequisite to the ability to generate reliable 
measurements and reduces the current uncertainty (\textit{i.e.,} we rely on the 
number of calltargets per callsite to match callsites and furthermore
assume that the order within ground truth and binary is the same).

\subsubsection{Improving the Patching Schema} 
Devising a patching schema
that is based on Dyninst functionality, 
which allows annotation of calltargets so they can hold at least 
4-byte of arbitrary data. This is required to hold the type data that
we generate using our classification. Keeping the runtime overhead
of said patching schema low should be the second goal of this venue 
after satisfying stability.

% \subsection{Expanding to Return Values} 
% Expanding our schema to return values
% is another viable venue of further work, as we were not able to 
% reliably reduce the number of problematic classification regarding 
% the return values of functions to 
% manageable levels. Should one attempt this, it should be noted that the
% responsibilities of callsites and calltargets are reversed in this 
% case: The callsite requires return value wideness, while the calltarget
% needs to provide it.

\subsubsection{Using Pointer and Memory Analysis} 
Introducing pointer/memory analysis
to distinguish simple 32-bit and 64-bit values and actual addresses to even further restrict the 
possible number of calltargets per callsite. This would require more 
precise data flow analysis, as in calculating value possibilities for 
registers at each instruction.

\subsubsection{Filtering Forward Edges}
As depicted in~\cite{vci:asiaccs}, \cite{marx} tool it is possible to reconstruct
a quasi class hierarchy from a program binary. In future we want to implement several algorithms
in order to reconstruct the class hierarchy with high accuracy and use it in order to compute 
possible calltarget sets for each previously detected callsite.
