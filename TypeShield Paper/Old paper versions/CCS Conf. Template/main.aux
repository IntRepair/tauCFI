\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand{\transparent@use}[1]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{NVD:ACE}
\citation{NVD:ACE}
\citation{schuster:coop}
\citation{crane:readactor++,subversive-c:lettner,ctf:coop,loop:oriented}
\citation{abadi:cfi2,abadi:cfi}
\citation{alias:undecidable}
\citation{safedispatch:jang}
\citation{haller:shrinkwrap}
\citation{bounov:interleaving}
\citation{vtv:tice}
\citation{ccfir:zhang,zhang:usenix}
\citation{vci:asiaccs}
\citation{veen:typearmor}
\@LN@col{1}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {section}{Abstract}{1}{section*.1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{chapter:Introduction}{{1}{1}{Introduction}{section.1}{}}
\newlabel{chapter:Introduction@cref}{{[section][1][]1}{1}}
\@LN@col{2}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces 10 Years of Arbitrary Code Reuse Attacks Statistics.\relax }}{1}{figure.caption.4}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{ace:nvd:statistics}{{1}{1}{10 Years of Arbitrary Code Reuse Attacks Statistics.\relax }{figure.caption.4}{}}
\newlabel{ace:nvd:statistics@cref}{{[figure][1][]1}{1}}
\citation{veen:typearmor}
\citation{microsoft:abi}
\citation{itanium:abi}
\citation{arm:abi}
\citation{veen:typearmor}
\citation{veen:typearmor}
\citation{reprod:nist}
\citation{veen:typearmor}
\@LN@col{1}
\@LN@col{2}
\newlabel{Contribution}{{1}{2}{Introduction}{figure.caption.4}{}}
\newlabel{Contribution@cref}{{[section][1][]1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Background}{2}{section.2}}
\newlabel{C++ Bad Forward Indirect Calls}{{2}{2}{Background}{section.2}{}}
\newlabel{C++ Bad Forward Indirect Calls@cref}{{[section][2][]2}{2}}
\citation{iso:iecN3690}
\citation{haller:shrinkwrap}
\citation{crane:readactor++}
\citation{iso:iecN3690}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Polymorphism in C++ Programs}{3}{subsection.2.1}}
\newlabel{Polymorphism in C++}{{2.1}{3}{Polymorphism in C++ Programs}{subsection.2.1}{}}
\newlabel{Polymorphism in C++@cref}{{[subsection][1][2]2.1}{3}}
\newlabel{Exploiting Polymorphism Weaknesses}{{2.1.1}{3}{Exploiting Object Dispatches in C++}{subsubsection.2.1.1}{}}
\newlabel{Exploiting Polymorphism Weaknesses@cref}{{[subsubsection][1][2,1]2.1.1}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Exploiting Object Dispatches in C++}{3}{figure.caption.5}}
\@LN@col{2}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces COOP loop gadget (ML-G, REC-G, UNR-G) at work.\relax }}{3}{figure.caption.5}}
\newlabel{Code example used to illustrate how a COOP loop gadget works}{{2}{3}{COOP loop gadget (ML-G, REC-G, UNR-G) at work.\relax }{figure.caption.5}{}}
\newlabel{Code example used to illustrate how a COOP loop gadget works@cref}{{[figure][2][]2}{3}}
\newlabel{Security Implications of Forbidden Forward Indirect Calls}{{2.1.2}{3}{Security Implications of Indirect Calls}{subsubsection.2.1.2}{}}
\newlabel{Security Implications of Forbidden Forward Indirect Calls@cref}{{[subsubsection][2][2,1]2.1.2}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Security Implications of Indirect Calls}{3}{subsubsection.2.1.2}}
\citation{byoungyoung:typecasting}
\citation{schuster:coop}
\citation{schuster:coop}
\citation{crane:readactor++}
\citation{schuster:coop}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Real COOP Attack Example}{4}{subsection.2.2}}
\newlabel{Real COOP Attack Example}{{2.2}{4}{Real COOP Attack Example}{subsection.2.2}{}}
\newlabel{Real COOP Attack Example@cref}{{[subsection][2][2]2.2}{4}}
\newlabel{Running Example: CVE X}{{2.2}{4}{Real COOP Attack Example}{subsection.2.2}{}}
\newlabel{Running Example: CVE X@cref}{{[subsection][2][2]2.2}{4}}
\@LN@col{2}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Class hierarchy of classes used in the COOP attack.\relax }}{4}{figure.caption.6}}
\newlabel{Class exploit}{{3}{4}{Class hierarchy of classes used in the COOP attack.\relax }{figure.caption.6}{}}
\newlabel{Class exploit@cref}{{[figure][3][]3}{4}}
\citation{vtv:tice}
\citation{haller:shrinkwrap}
\citation{bounov:interleaving}
\citation{zhang:vtrust}
\citation{veen:typearmor}
\citation{veen:typearmor}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces System overview.\relax }}{5}{figure.caption.7}}
\newlabel{System overview.}{{4}{5}{System overview.\relax }{figure.caption.7}{}}
\newlabel{System overview.@cref}{{[figure][4][]4}{5}}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Checking Indirect Calls in Practice}{5}{subsection.2.3}}
\newlabel{C++ Indirect Calls in Practice}{{2.3}{5}{Checking Indirect Calls in Practice}{subsection.2.3}{}}
\newlabel{C++ Indirect Calls in Practice@cref}{{[subsection][3][2]2.3}{5}}
\@LN@col{2}
\@writefile{toc}{\contentsline {section}{\numberline {3}Threat Model}{5}{section.3}}
\newlabel{Adversary Model}{{3}{5}{Threat Model}{section.3}{}}
\newlabel{Adversary Model@cref}{{[section][3][]3}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Overview}{5}{section.4}}
\newlabel{chapter:TypeShild Overview}{{4}{5}{Overview}{section.4}{}}
\newlabel{chapter:TypeShild Overview@cref}{{[section][4][]4}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Invariants}{5}{subsection.4.1}}
\newlabel{Invariants for Targets and Callsites}{{4.1}{5}{Invariants}{subsection.4.1}{}}
\newlabel{Invariants for Targets and Callsites@cref}{{[subsection][1][4]4.1}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.1}Calltargets and Callsites}{5}{subsubsection.4.1.1}}
\citation{veen:typearmor}
\citation{veen:typearmor}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {4.1.2}Callertarget Returns}{6}{subsubsection.4.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Type Based Policy}{6}{subsection.4.2}}
\newlabel{TypeShield Policy Mechanism}{{4.2}{6}{Type Based Policy}{subsection.4.2}{}}
\newlabel{TypeShield Policy Mechanism@cref}{{[subsection][2][4]4.2}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Depicts our forward parameter type and count policy for a legitimate forward indirect control flow transfer. The $X$ axis (parameter count) and $Y$ axis (register wideness) of matrices $M1$, $M2$ and $M3$ represent function parameter count and bit-widths in bytes, respectively. Note that our type policy performs an $\wedge $ (\textit  {i.e.,} logical and) operation between each entry in $M1_{i,j}$ and $M2_{i,j}$ where $i$ and $j$ are column and row indexes. If two black filled circles located in $M1$ $\wedge $ $M2$ overlap on positions $M1_{i} = M2_{i} \wedge M1_{j} = M2_{j}$ than we have a match. Green circles indicate a match whereas red circles indicate a mismatch in $M3$. Only if at least one match (green circle) is present in each of the matrix columns of $M3$ than the indirect call transfer will be allowed.\relax }}{6}{figure.caption.8}}
\newlabel{Type and parameter count policy.}{{5}{6}{Depicts our forward parameter type and count policy for a legitimate forward indirect control flow transfer. The $X$ axis (parameter count) and $Y$ axis (register wideness) of matrices $M1$, $M2$ and $M3$ represent function parameter count and bit-widths in bytes, respectively. Note that our type policy performs an $\wedge $ (\textit {i.e.,} logical and) operation between each entry in $M1_{i,j}$ and $M2_{i,j}$ where $i$ and $j$ are column and row indexes. If two black filled circles located in $M1$ $\wedge $ $M2$ overlap on positions $M1_{i} = M2_{i} \wedge M1_{j} = M2_{j}$ than we have a match. Green circles indicate a match whereas red circles indicate a mismatch in $M3$. Only if at least one match (green circle) is present in each of the matrix columns of $M3$ than the indirect call transfer will be allowed.\relax }{figure.caption.8}{}}
\newlabel{Type and parameter count policy.@cref}{{[figure][5][]5}{6}}
\newlabel{eqn:1}{{4.1}{6}{}{theorem.4.1}{}}
\newlabel{eqn:1@cref}{{[theorem][1][4]4.1}{6}}
\newlabel{eqn:2}{{4.2}{6}{}{theorem.4.2}{}}
\newlabel{eqn:2@cref}{{[theorem][2][4]4.2}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Backward Edge Policy}{6}{subsection.4.3}}
\newlabel{Backward Edge CFI Policy}{{4.3}{6}{Backward Edge Policy}{subsection.4.3}{}}
\newlabel{Backward Edge CFI Policy@cref}{{[subsection][3][4]4.3}{6}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Parameter Count vs. Parameter Type}{6}{subsection.4.4}}
\newlabel{TypeShild Impact on COOP}{{4.4}{6}{Parameter Count vs. Parameter Type}{subsection.4.4}{}}
\newlabel{TypeShild Impact on COOP@cref}{{[subsection][4][4]4.4}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Transition lattice between calltargets and callsites having two parameters. $a$ $\wedge $ $b$ $\in \{0-bit, 8-bit, 16-bit, 32-bit, 64-bit\}$ and the two function parameters have $\{0-byte, 1-byte, 2-byte, 4-byte, 8-byte\}$ register wideness. \textsc  {TypeShield} allows a transition from $a \rightarrow b \ iff$ $a_{i} \le b_{i}$ where $i \in [1, 2]$. Note that $\top $ and $\bot $ represent the top and bottom elements of the lattice, respectively. An arrow represents an indirect control flow transfer from a callsite to a calltarget. The given lattice contains in total 8 black colored arrows (legal) and 6 red colored arrows (illegal) indirect control flow transitions. \textsc  {TypeShield} allows only the legal transfers whereas\nonbreakingspace \citep  {veen:typearmor} allows all of them.\relax }}{6}{figure.caption.9}}
\newlabel{fig:lattice3264}{{6}{6}{Transition lattice between calltargets and callsites having two parameters. $a$ $\wedge $ $b$ $\in \{0-bit, 8-bit, 16-bit, 32-bit, 64-bit\}$ and the two function parameters have $\{0-byte, 1-byte, 2-byte, 4-byte, 8-byte\}$ register wideness. \textsc {TypeShield} allows a transition from $a \rightarrow b \ iff$ $a_{i} \le b_{i}$ where $i \in [1, 2]$. Note that $\top $ and $\bot $ represent the top and bottom elements of the lattice, respectively. An arrow represents an indirect control flow transfer from a callsite to a calltarget. The given lattice contains in total 8 black colored arrows (legal) and 6 red colored arrows (illegal) indirect control flow transitions. \textsc {TypeShield} allows only the legal transfers whereas~\cite {veen:typearmor} allows all of them.\relax }{figure.caption.9}{}}
\newlabel{fig:lattice3264@cref}{{[figure][6][]6}{6}}
\citation{veen:typearmor}
\citation{itanium:abi}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {5}Design}{7}{section.5}}
\newlabel{chapter:Design}{{5}{7}{Design}{section.5}{}}
\newlabel{chapter:Design@cref}{{[section][5][]5}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Parameter Count Based Policy}{7}{subsection.5.1}}
\newlabel{Parameter Count Based Policy}{{5.1}{7}{Parameter Count Based Policy}{subsection.5.1}{}}
\newlabel{Parameter Count Based Policy@cref}{{[subsection][1][5]5.1}{7}}
\newlabel{section:countpolicy}{{5.1}{7}{Parameter Count Based Policy}{subsection.5.1}{}}
\newlabel{section:countpolicy@cref}{{[subsection][1][5]5.1}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Callsite \& calltargets {count} policy classification schema.\relax }}{7}{figure.caption.10}}
\newlabel{fig:COUNTschema}{{7}{7}{Callsite \& calltargets {count} policy classification schema.\relax }{figure.caption.10}{}}
\newlabel{fig:COUNTschema@cref}{{[figure][7][]7}{7}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Parameter Register Wideness Based Policy}{7}{subsection.5.2}}
\newlabel{section:typepolicy}{{5.2}{7}{Parameter Register Wideness Based Policy}{subsection.5.2}{}}
\newlabel{section:typepolicy@cref}{{[subsection][2][5]5.2}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Our type policy schema for callsites and calltargets. Note that p. means parameter. As it is depicted in this example, when requiring parameter width, one starts at the bottom of the above matrix and grows to the top, as it is always possible to accept more parameters than required. Also, the reverse is true for providing parameters, as it is possible to accept less parameters than provided. Note that accepting more parameters than provided is not allowed.\relax }}{7}{figure.caption.11}}
\newlabel{fig:TYPEschema}{{8}{7}{Our type policy schema for callsites and calltargets. Note that p. means parameter. As it is depicted in this example, when requiring parameter width, one starts at the bottom of the above matrix and grows to the top, as it is always possible to accept more parameters than required. Also, the reverse is true for providing parameters, as it is possible to accept less parameters than provided. Note that accepting more parameters than provided is not allowed.\relax }{figure.caption.11}{}}
\newlabel{fig:TYPEschema@cref}{{[figure][8][]8}{7}}
\citation{khedker2009data}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Analysis of Register States}{8}{subsection.5.3}}
\newlabel{section:instructionanalysis}{{5.3}{8}{Analysis of Register States}{subsection.5.3}{}}
\newlabel{section:instructionanalysis@cref}{{[subsection][3][5]5.3}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Calltarget Analysis}{8}{subsection.5.4}}
\newlabel{section:calltargetanalysis}{{5.4}{8}{Calltarget Analysis}{subsection.5.4}{}}
\newlabel{section:calltargetanalysis@cref}{{[subsection][4][5]5.4}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.4.1}Liveness Analysis}{8}{subsubsection.5.4.1}}
\@LN@col{2}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Basic block liveness analysis.\relax }}{8}{algocf.1}}
\newlabel{alg:liveness}{{1}{8}{Liveness Analysis}{algocf.1}{}}
\newlabel{alg:liveness@cref}{{[algorithm][1][]1}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.4.2}Required Parameter Count}{8}{subsubsection.5.4.2}}
\newlabel{subsection:requiredparamwideness}{{5.4.3}{8}{Required Parameter Wideness}{subsubsection.5.4.3}{}}
\newlabel{subsection:requiredparamwideness@cref}{{[subsubsection][3][5,4]5.4.3}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.4.3}Required Parameter Wideness}{8}{subsubsection.5.4.3}}
\citation{khedker2009data}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.4.4}Encountered Analysis Issues}{9}{subsubsection.5.4.4}}
\newlabel{subsection:variadicfunctions}{{5.4.4}{9}{Variadic Functions}{section*.13}{}}
\newlabel{subsection:variadicfunctions@cref}{{[subsubsection][4][5,4]5.4.4}{9}}
\@writefile{toc}{\contentsline {paragraph}{Variadic Functions}{9}{section*.13}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Assembly code of the \texttt  {make\_cmd} function which was compiled with Clang -O2 flag, which has a variadic parameter list, shaded gray above.\relax }}{9}{figure.caption.14}}
\newlabel{fig:asmvariadic}{{9}{9}{Assembly code of the \texttt {make\_cmd} function which was compiled with Clang -O2 flag, which has a variadic parameter list, shaded gray above.\relax }{figure.caption.14}{}}
\newlabel{fig:asmvariadic@cref}{{[figure][9][]9}{9}}
\@LN@col{2}
\@writefile{toc}{\contentsline {paragraph}{Ignoring Reads}{9}{section*.15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Callsite Analysis}{9}{subsection.5.5}}
\newlabel{section:callsiteanalysis}{{5.5}{9}{Callsite Analysis}{subsection.5.5}{}}
\newlabel{section:callsiteanalysis@cref}{{[subsection][5][5]5.5}{9}}
\newlabel{subsection:reachindefinitionstheory}{{5.5.1}{9}{Reaching Definitions}{subsubsection.5.5.1}{}}
\newlabel{subsection:reachindefinitionstheory@cref}{{[subsubsection][1][5,5]5.5.1}{9}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.5.1}Reaching Definitions}{9}{subsubsection.5.5.1}}
\citation{khedker2009data}
\@LN@col{1}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Basic block reaching definition analysis.\relax }}{10}{algocf.2}}
\newlabel{alg:reaching}{{2}{10}{Reaching Definitions}{algocf.2}{}}
\newlabel{alg:reaching@cref}{{[algorithm][2][]2}{10}}
\newlabel{subsection:providedparamcount}{{5.5.2}{10}{Provided Parameter Count}{subsubsection.5.5.2}{}}
\newlabel{subsection:providedparamcount@cref}{{[subsubsection][2][5,5]5.5.2}{10}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.5.2}Provided Parameter Count}{10}{subsubsection.5.5.2}}
\newlabel{subsection:providedparamwideness}{{5.5.3}{10}{Provided Parameter Width}{subsubsection.5.5.3}{}}
\newlabel{subsection:providedparamwideness@cref}{{[subsubsection][3][5,5]5.5.3}{10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.5.3}Provided Parameter Width}{10}{subsubsection.5.5.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.5.4}Encountered Analysis Issues}{10}{subsubsection.5.5.4}}
\@writefile{toc}{\contentsline {paragraph}{Parameter Lists with \textit  {Holes}.}{10}{section*.17}}
\@writefile{toc}{\contentsline {paragraph}{Address Width Unterestimation.}{10}{section*.18}}
\citation{function:boundary}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6}Enforcing The Forward Edge Policy}{11}{subsection.5.6}}
\newlabel{Enforcing The Forward Edge Policy}{{5.6}{11}{Enforcing The Forward Edge Policy}{subsection.5.6}{}}
\newlabel{Enforcing The Forward Edge Policy@cref}{{[subsection][6][5]5.6}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.7}Backward Edge Analysis}{11}{subsection.5.7}}
\newlabel{Backward Edge Analysis}{{5.7}{11}{Backward Edge Analysis}{subsection.5.7}{}}
\newlabel{Backward Edge Analysis@cref}{{[subsection][7][5]5.7}{11}}
\@LN@col{2}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Calltarget return set analysis.\relax }}{11}{algocf.3}}
\newlabel{alg:returns}{{3}{11}{Backward Edge Analysis}{algocf.3}{}}
\newlabel{alg:returns@cref}{{[algorithm][3][]3}{11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.7.1}Enforcing The Backward Edge Policy}{11}{subsubsection.5.7.1}}
\citation{dynamorio:drmemory}
\citation{veen:typearmor}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {6}Implementation}{12}{section.6}}
\newlabel{chapter:Implementation}{{6}{12}{Implementation}{section.6}{}}
\newlabel{chapter:Implementation@cref}{{[section][6][]6}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Evaluation}{12}{section.7}}
\newlabel{chapter:Evaluation}{{7}{12}{Evaluation}{section.7}{}}
\newlabel{chapter:Evaluation@cref}{{[section][7][]7}{12}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Precision}{12}{subsection.7.1}}
\newlabel{section:typeshieldprecision}{{7.1}{12}{Precision}{subsection.7.1}{}}
\newlabel{section:typeshieldprecision@cref}{{[subsection][1][7]7.1}{12}}
\newlabel{subsection:typeshieldprecision}{{7.1.1}{12}{Quality and Applicability of Ground Truth}{subsubsection.7.1.1}{}}
\newlabel{subsection:typeshieldprecision@cref}{{[subsubsection][1][7,1]7.1.1}{12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.1}Quality and Applicability of Ground Truth}{12}{subsubsection.7.1.1}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Table shows the quality of structural matching provided by our automated verify and test environment, regarding callsites and calltargets when compiling with optimization level O2. The label Clang miss denotes elements not found in the data-set of the Clang/LLVM pass. The label TS denotes elements not found in the data-set of \textsc  {TypeShield}. \relax }}{12}{table.caption.20}}
\newlabel{tbl:matchingquality}{{1}{12}{Table shows the quality of structural matching provided by our automated verify and test environment, regarding callsites and calltargets when compiling with optimization level O2. The label Clang miss denotes elements not found in the data-set of the Clang/LLVM pass. The label TS denotes elements not found in the data-set of \textsc {TypeShield}. \relax }{table.caption.20}{}}
\newlabel{tbl:matchingquality@cref}{{[table][1][]1}{12}}
\@LN@col{1}
\newlabel{subsection:typeshieldcountprecision}{{7.1.2}{13}{Count Based Classification Precision}{subsubsection.7.1.2}{}}
\newlabel{subsection:typeshieldcountprecision@cref}{{[subsubsection][2][7,1]7.1.2}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.2}Count Based Classification Precision}{13}{subsubsection.7.1.2}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces The results for classification of callsites and calltargets using our \textit  {count} policy on the O2 optimization level, when comparing to the ground truth obtained by our Clang/LLVM pass. The label perfect args denotes all occurrences when our result and the ground truth perfectly match regarding the required/provided arguments. The label perfect return denotes this for return values. \relax }}{13}{table.caption.21}}
\newlabel{tbl:precisionCOUNT}{{2}{13}{The results for classification of callsites and calltargets using our \textit {count} policy on the O2 optimization level, when comparing to the ground truth obtained by our Clang/LLVM pass. The label perfect args denotes all occurrences when our result and the ground truth perfectly match regarding the required/provided arguments. The label perfect return denotes this for return values. \relax }{table.caption.21}{}}
\newlabel{tbl:precisionCOUNT@cref}{{[table][2][]2}{13}}
\@LN@col{2}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces The result for classification of callsites using our \textit  {type} policy on the O2 optimization level, when comparing to the ground truth obtained by our Clang/LLVM pass. The label perfect args denotes all occurrences when our result and the ground truth perfectly match regarding the required/provided arguments. The label perfect return denotes this for return values. \relax }}{13}{table.caption.22}}
\newlabel{tbl:precisionTYPE}{{3}{13}{The result for classification of callsites using our \textit {type} policy on the O2 optimization level, when comparing to the ground truth obtained by our Clang/LLVM pass. The label perfect args denotes all occurrences when our result and the ground truth perfectly match regarding the required/provided arguments. The label perfect return denotes this for return values. \relax }{table.caption.22}{}}
\newlabel{tbl:precisionTYPE@cref}{{[table][3][]3}{13}}
\newlabel{subsection:typeshieldcountprecision}{{7.1.3}{13}{Type Based Classification Precision}{subsubsection.7.1.3}{}}
\newlabel{subsection:typeshieldcountprecision@cref}{{[subsubsection][3][7,1]7.1.3}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.1.3}Type Based Classification Precision}{13}{subsubsection.7.1.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Effectiveness}{13}{subsection.7.2}}
\newlabel{section:typeshieldeffectiveness}{{7.2}{13}{Effectiveness}{subsection.7.2}{}}
\newlabel{section:typeshieldeffectiveness@cref}{{[subsection][2][7]7.2}{13}}
\citation{vci:asiaccs}
\citation{vfuard:aravind}
\citation{gawlik}
\citation{safedispatch:jang}
\citation{vtv:tice}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Restriction results of allowed callsites per calltarget for several test series on various targets compiled with Clang using optimization level O2. Note that the basic restriction to address taken only calltargets (see column AT) is present for each other series. The label $count^*$ denotes the best possible reduction using our \emph  {count} policy based on the ground truth collected by our Clang/LLVM pass, while $count$ denotes the results of our implementation of the \emph  {count} policy derived from the binaries. The same applies to $type*$ and $type$ regarding the \emph  {type} policy. A lower number of calltargets per callsite indicates better results. Note that our \emph  {type} policy is superior to the \emph  {count} policy, as it allows for a stronger reduction of allowed calltargets. We consider this a good result which further improves the state-of-the-art. Finally, we provide the median and the pair of mean and standard deviation to allow for a better comparison with other state-of-the-art tools. \relax }}{14}{table.caption.23}}
\newlabel{tbl:policycompat}{{4}{14}{Restriction results of allowed callsites per calltarget for several test series on various targets compiled with Clang using optimization level O2. Note that the basic restriction to address taken only calltargets (see column AT) is present for each other series. The label $count^*$ denotes the best possible reduction using our \emph {count} policy based on the ground truth collected by our Clang/LLVM pass, while $count$ denotes the results of our implementation of the \emph {count} policy derived from the binaries. The same applies to $type*$ and $type$ regarding the \emph {type} policy. A lower number of calltargets per callsite indicates better results. Note that our \emph {type} policy is superior to the \emph {count} policy, as it allows for a stronger reduction of allowed calltargets. We consider this a good result which further improves the state-of-the-art. Finally, we provide the median and the pair of mean and standard deviation to allow for a better comparison with other state-of-the-art tools. \relax }{table.caption.23}{}}
\newlabel{tbl:policycompat@cref}{{[table][4][]4}{14}}
\@LN@col{1}
\newlabel{subsection:theoreticallimit}{{7.2.1}{14}{Theoretical Limits}{subsubsection.7.2.1}{}}
\newlabel{subsection:theoreticallimit@cref}{{[subsubsection][1][7,2]7.2.1}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.1}Theoretical Limits.}{14}{subsubsection.7.2.1}}
\newlabel{subsection:typeshieldvslimitcount}{{7.2.2}{14}{Reduction achieved by \textsc {TypeShield}}{subsubsection.7.2.2}{}}
\newlabel{subsection:typeshieldvslimitcount@cref}{{[subsubsection][2][7,2]7.2.2}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.2}Reduction achieved by \textsc  {TypeShield}}{14}{subsubsection.7.2.2}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Runtime Overhead}{14}{subsection.7.3}}
\newlabel{section:typeshieldoverheadperformance}{{7.3}{14}{Runtime Overhead}{subsection.7.3}{}}
\newlabel{section:typeshieldoverheadperformance@cref}{{[subsection][3][7]7.3}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces SPEC CPU2006 Benchmark Results. \relax }}{14}{figure.caption.24}}
\newlabel{fig:awesome_image}{{10}{14}{SPEC CPU2006 Benchmark Results. \relax }{figure.caption.24}{}}
\newlabel{fig:awesome_image@cref}{{[figure][10][]10}{14}}
\citation{veen:typearmor}
\citation{vci:asiaccs}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4}Instrumentation Overhead}{15}{subsection.7.4}}
\newlabel{section:typeshieldoverheadinstrumentation}{{7.4}{15}{Instrumentation Overhead}{subsection.7.4}{}}
\newlabel{section:typeshieldoverheadinstrumentation@cref}{{[subsection][4][7]7.4}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5}Security Analysis}{15}{subsection.7.5}}
\newlabel{RQ5: Security Analysis}{{7.5}{15}{Security Analysis}{subsection.7.5}{}}
\newlabel{RQ5: Security Analysis@cref}{{[subsection][5][7]7.5}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Postgresql -O2 CDF.\relax }}{15}{figure.caption.25}}
\newlabel{fig7}{{11}{15}{Postgresql -O2 CDF.\relax }{figure.caption.25}{}}
\newlabel{fig7@cref}{{[figure][11][]11}{15}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.6}TyperShield Upper Bounds}{15}{subsection.7.6}}
\newlabel{RQ6:TyperArmor's Imprecise Parameter-Count Policy}{{7.6}{15}{TyperShield Upper Bounds}{subsection.7.6}{}}
\newlabel{RQ6:TyperArmor's Imprecise Parameter-Count Policy@cref}{{[subsection][6][7]7.6}{15}}
\newlabel{Too Permissive Parameter-Based Policies}{{7.6}{15}{TyperShield Upper Bounds}{subsection.7.6}{}}
\newlabel{Too Permissive Parameter-Based Policies@cref}{{[subsection][6][7]7.6}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.7}Comparison with Other Tools}{15}{subsection.7.7}}
\newlabel{RQ5: Is TypeShield better than other tools?}{{7.7}{15}{Comparison with Other Tools}{subsection.7.7}{}}
\newlabel{RQ5: Is TypeShield better than other tools?@cref}{{[subsection][7][7]7.7}{15}}
\@LN@col{1}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Medians of calltargets per callsite for different tools. Note that the smaller the geomean numbers are, the better the technique is. AT is a technique which allows calltargets that are address taken. IFCC is a compiler based solution and depicted here as a reference for what is possible when source code is available. TypeArmor and TypeShield on the other hand are binary-based tools. We can observe that our type-based tool reduces the number of calltargets by up to 35\% when compared to the AT method and by 13\% on average when comparing with TypeArmor.\relax }}{16}{table.caption.26}}
\newlabel{tbl:toolcompare}{{5}{16}{Medians of calltargets per callsite for different tools. Note that the smaller the geomean numbers are, the better the technique is. AT is a technique which allows calltargets that are address taken. IFCC is a compiler based solution and depicted here as a reference for what is possible when source code is available. TypeArmor and TypeShield on the other hand are binary-based tools. We can observe that our type-based tool reduces the number of calltargets by up to 35\% when compared to the AT method and by 13\% on average when comparing with TypeArmor.\relax }{table.caption.26}{}}
\newlabel{tbl:toolcompare@cref}{{[table][5][]5}{16}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Discussion}{16}{section.8}}
\newlabel{chapter:Discussion}{{8}{16}{Discussion}{section.8}{}}
\newlabel{chapter:Discussion@cref}{{[section][8][]8}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1}Comparison with TypeArmor}{16}{subsection.8.1}}
\newlabel{section:comptype}{{8.1}{16}{Comparison with TypeArmor}{subsection.8.1}{}}
\newlabel{section:comptype@cref}{{[subsection][1][8]8.1}{16}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {8.1.1}Reduction of Available Calltargets}{16}{subsubsection.8.1.1}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2}TypeArmor Discrepancies}{16}{subsection.8.2}}
\newlabel{section:discrep}{{8.2}{16}{TypeArmor Discrepancies}{subsection.8.2}{}}
\newlabel{section:discrep@cref}{{[subsection][2][8]8.2}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.3}Improving \textsc  {TypeShield}}{16}{subsection.8.3}}
\newlabel{section:venuesimp}{{8.3}{16}{Improving \textsc {TypeShield}}{subsection.8.3}{}}
\newlabel{section:venuesimp@cref}{{[subsection][3][8]8.3}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.4}Limitations of \textsc  {TypeShield}}{16}{subsection.8.4}}
\newlabel{section:limit}{{8.4}{16}{Limitations of \textsc {TypeShield}}{subsection.8.4}{}}
\newlabel{section:limit@cref}{{[subsection][4][8]8.4}{16}}
\citation{dang:asiaccs}
\citation{conti:ccs}
\citation{vtv:tice}
\citation{carlini:bending}
\citation{andriesse:indepth}
\citation{alan:mycroft}
\citation{lin:rewards}
\citation{bap:brumley}
\citation{fokin:smartdec}
\citation{divine:balakrishnan}
\citation{caballero:inference}
\citation{crane:readactor++}
\citation{schuster:coop}
\citation{subversive-c:lettner}
\citation{loop:oriented}
\citation{intel:cet}
\citation{abadi:cfi2,abadi:cfi}
\citation{windows:cfguard}
\citation{vfuard:aravind}
\citation{vtint:zhang}
\citation{veen:typearmor}
\citation{veen:typearmor}
\citation{vci:asiaccs}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {9}Related Work}{17}{section.9}}
\newlabel{chapter:Related_Work}{{9}{17}{Related Work}{section.9}{}}
\newlabel{chapter:Related_Work@cref}{{[section][9][]9}{17}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1}Type-Inference on Executables}{17}{subsection.9.1}}
\newlabel{Type-Inference on Executables}{{9.1}{17}{Type-Inference on Executables}{subsection.9.1}{}}
\newlabel{Type-Inference on Executables@cref}{{[subsection][1][9]9.1}{17}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.2}Mitigation of Advanced CRAs}{17}{subsection.9.2}}
\newlabel{Mitigation of Advanced Code-Reuse Attacks}{{9.2}{17}{Mitigation of Advanced CRAs}{subsection.9.2}{}}
\newlabel{Mitigation of Advanced Code-Reuse Attacks@cref}{{[subsection][2][9]9.2}{17}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.1}Binary Based Techniques}{17}{subsubsection.9.2.1}}
\citation{marx}
\citation{vtpin}
\citation{veen:typearmor}
\citation{safedispatch:jang}
\citation{vtv:tice}
\citation{crane:readactor++}
\citation{zhang:vtrust}
\citation{volodymyr:cpi}
\citation{haller:shrinkwrap}
\citation{vtv:tice}
\citation{safedispatch:jang}
\citation{zhang:vtrust}
\citation{crane:readactor++}
\citation{volodymyr:cpi}
\citation{bounov:interleaving}
\citation{intel:cet}
\citation{windows:cfguard}
\citation{veen:cfi}
\citation{dep}
\citation{ASLR}
\citation{ROP,kornau:rop,rop:shacham}
\citation{JOP1,JOP2,JOP3}
\citation{rop:carlini}
\citation{veen:cfi}
\citation{ccfir:zhang}
\citation{cfci:zhang}
\citation{mohan:opaque}
\citation{ccfi:jose}
\citation{pblocker:prakash}
\citation{dynaguard:petsios}
\citation{cfiguard:yuan}
\citation{mcfi:niu}
\citation{rockjit:niu}
\citation{perinput:niu}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.2}Source Code Based Techniques}{18}{subsubsection.9.2.2}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.3}Runtime Based Techniques}{18}{subsubsection.9.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.3}Mitigation of not Advanced CRAs}{18}{subsection.9.3}}
\newlabel{Mitigation of Code-Reuse Attacks}{{9.3}{18}{Mitigation of not Advanced CRAs}{subsection.9.3}{}}
\newlabel{Mitigation of Code-Reuse Attacks@cref}{{[subsection][3][9]9.3}{18}}
\citation{vci:asiaccs}
\citation{marx}
\bibstyle{ACM-Reference-Format}
\bibdata{literatur}
\bibcite{dynamorio:drmemory}{{1}{dyn}{{??}}{{}}}
\bibcite{itanium:abi}{{2}{ita}{{??}}{{}}}
\bibcite{microsoft:abi}{{3}{1994}{{mic}}{{??}}}
\bibcite{ctf:coop}{{4}{2015}{{ctf}}{{??}}}
\bibcite{arm:abi}{{5}{2015}{{arm}}{{??}}}
\bibcite{windows:cfguard}{{6}{2015}{{win}}{{??}}}
\bibcite{intel:cet}{{7}{2016}{{int}}{{??}}}
\bibcite{abadi:cfi2}{{8}{2005}{{Abadi et~al\unhbox \voidb@x \hbox {.}}}{{Abadi, Budiu, Erlingsson, and Ligatti}}}
\bibcite{abadi:cfi}{{9}{2009}{{Abadi et~al\unhbox \voidb@x \hbox {.}}}{{Abadi, Budiu, Erlingsson, and Ligatti}}}
\bibcite{andriesse:indepth}{{10}{2016}{{Andriesse et~al\unhbox \voidb@x \hbox {.}}}{{Andriesse, Chen, Veen, Slowinska, and Bos}}}
\bibcite{function:boundary}{{11}{2017}{{Andriesse et~al\unhbox \voidb@x \hbox {.}}}{{Andriesse, Slowinska, and Bos}}}
\bibcite{divine:balakrishnan}{{12}{2007}{{Balakrishnan and Reps}}{{Balakrishnan and Reps}}}
\bibcite{JOP1}{{13}{2011}{{Bletsch et~al\unhbox \voidb@x \hbox {.}}}{{Bletsch, Jiang, Freeh, and Liang}}}
\bibcite{bounov:interleaving}{{14}{2016}{{Bounov et~al\unhbox \voidb@x \hbox {.}}}{{Bounov, G\IeC {\"o}khan~Kici, and Lerner}}}
\bibcite{bap:brumley}{{15}{2011}{{Brumley et~al\unhbox \voidb@x \hbox {.}}}{{Brumley, Jager, Avgerinos, and Schwartz}}}
\bibcite{ROP}{{16}{2008}{{Buchanan et~al\unhbox \voidb@x \hbox {.}}}{{Buchanan, Roemer, Shacham, and Savage}}}
\bibcite{caballero:inference}{{17}{2016}{{Caballero and Lin}}{{Caballero and Lin}}}
\bibcite{carlini:bending}{{18}{2015}{{Carlini et~al\unhbox \voidb@x \hbox {.}}}{{Carlini, Barresi, Payer, Wagner, and Gross}}}
\bibcite{rop:carlini}{{19}{2014}{{Carlini and Wagner}}{{Carlini and Wagner}}}
\bibcite{JOP2}{{20}{2010}{{Checkoway et~al\unhbox \voidb@x \hbox {.}}}{{Checkoway, Davi, Dmitrienko, Sadeghi, Shacham, and Winandy}}}
\bibcite{conti:ccs}{{21}{2015}{{Conti et~al\unhbox \voidb@x \hbox {.}}}{{Conti, Larsen, Crane, Davi, Franz, Negro, Liebchen, Qunaibit, and Sadeghi}}}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {10}Future Work}{19}{section.10}}
\newlabel{chapter:Future_Work}{{10}{19}{Future Work}{section.10}{}}
\newlabel{chapter:Future_Work@cref}{{[section][10][]10}{19}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {10.0.1}Improving the Structural Matching}{19}{subsubsection.10.0.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {10.0.2}Improving the Patching Schema}{19}{subsubsection.10.0.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {10.0.3}Using Pointer and Memory Analysis}{19}{subsubsection.10.0.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {10.0.4}Filtering Forward Edges}{19}{subsubsection.10.0.4}}
\@writefile{toc}{\contentsline {section}{\numberline {11}Conclusion}{19}{section.11}}
\newlabel{chapter:Conclusion}{{11}{19}{Conclusion}{section.11}{}}
\newlabel{chapter:Conclusion@cref}{{[section][11][]11}{19}}
\@LN@col{2}
\@writefile{toc}{\contentsline {section}{References}{19}{section*.28}}
\bibcite{crane:readactor++}{{22}{2015}{{Crane et~al\unhbox \voidb@x \hbox {.}}}{{Crane, Volckaert, Schuster, Liebchen, Larsen, Davi, Sadeghi, Holz, De~Sutter, and Franz}}}
\bibcite{dang:asiaccs}{{23}{2015}{{Dang et~al\unhbox \voidb@x \hbox {.}}}{{Dang, Maniatis, and Wagner}}}
\bibcite{JOP3}{{24}{2010}{{Davi et~al\unhbox \voidb@x \hbox {.}}}{{Davi, Dmitrienko, Sadeghi, and Winandy}}}
\bibcite{vci:asiaccs}{{25}{2017}{{Elsabagh et~al\unhbox \voidb@x \hbox {.}}}{{Elsabagh, Fleck, and Stavrou}}}
\bibcite{fokin:smartdec}{{26}{2011}{{Fokin et~al\unhbox \voidb@x \hbox {.}}}{{Fokin, Derevenets, Chernov, and Troshina}}}
\bibcite{gawlik}{{27}{2014}{{Gawlik and Holz}}{{Gawlik and Holz}}}
\bibcite{haller:shrinkwrap}{{28}{2015}{{Haller et~al\unhbox \voidb@x \hbox {.}}}{{Haller, Goktas, Athanasopoulos, Portokalidis, and Bos}}}
\bibcite{safedispatch:jang}{{29}{2014}{{Jang et~al\unhbox \voidb@x \hbox {.}}}{{Jang, Tatlock, and Lerner}}}
\bibcite{reprod:nist}{{30}{2009}{{Jansen}}{{Jansen}}}
\bibcite{iso:iecN3690}{{31}{2013}{{JTC1/SC22WG21}}{{JTC1/SC22WG21}}}
\bibcite{khedker2009data}{{32}{2009}{{Khedker et~al\unhbox \voidb@x \hbox {.}}}{{Khedker, Sanyal, and Sathe}}}
\bibcite{kornau:rop}{{33}{2009}{{Kornau}}{{Kornau}}}
\bibcite{volodymyr:cpi}{{34}{2014}{{Kuznetsov et~al\unhbox \voidb@x \hbox {.}}}{{Kuznetsov, Szekeres, Payer, Candea, Sekar, and Song}}}
\bibcite{loop:oriented}{{35}{2015}{{Lan et~al\unhbox \voidb@x \hbox {.}}}{{Lan, Li, Sun, Su, Liu, and Zeng}}}
\bibcite{byoungyoung:typecasting}{{36}{2015}{{Lee et~al\unhbox \voidb@x \hbox {.}}}{{Lee, Song, Kim, and Lee}}}
\bibcite{subversive-c:lettner}{{37}{2016}{{Lettner et~al\unhbox \voidb@x \hbox {.}}}{{Lettner, Kollenda, Homescu, Larsen, Schuster, Davi, Sadeghi, Holz, and Franz}}}
\bibcite{lin:rewards}{{38}{2010}{{Lin et~al\unhbox \voidb@x \hbox {.}}}{{Lin, Zhang, and Xu}}}
\bibcite{ccfi:jose}{{39}{2015}{{Mashtizadeh et~al\unhbox \voidb@x \hbox {.}}}{{Mashtizadeh, Bittau, Boneh, and Mazi\IeC {\`e}res}}}
\bibcite{dep}{{40}{Microsoft}{{Microsoft}}{{}}}
\bibcite{mohan:opaque}{{41}{2015}{{Mohan et~al\unhbox \voidb@x \hbox {.}}}{{Mohan, Larsen, Brunthaler, Hamlen, and Franz}}}
\bibcite{alan:mycroft}{{42}{2007}{{Mycroft}}{{Mycroft}}}
\bibcite{mcfi:niu}{{43}{2014a}{{Niu and Tan}}{{Niu and Tan}}}
\bibcite{rockjit:niu}{{44}{2014b}{{Niu and Tan}}{{Niu and Tan}}}
\bibcite{perinput:niu}{{45}{2015}{{Niu and Tan}}{{Niu and Tan}}}
\bibcite{NVD:ACE}{{46}{2017}{{(NVD)}}{{(NVD)}}}
\bibcite{marx}{{47}{2017}{{Pawlowski et~al\unhbox \voidb@x \hbox {.}}}{{Pawlowski, Contag, van~der Veen, Ouwehand, Holz, Bos, Athanasopoulos, and Giuffrida}}}
\bibcite{dynaguard:petsios}{{48}{2015}{{Petsios et~al\unhbox \voidb@x \hbox {.}}}{{Petsios, Kemerlis, Polychronakis, and Keromytis}}}
\bibcite{vfuard:aravind}{{49}{2015}{{Prakash et~al\unhbox \voidb@x \hbox {.}}}{{Prakash, Hu, and Yin}}}
\bibcite{pblocker:prakash}{{50}{2015}{{Prakash and Yin}}{{Prakash and Yin}}}
\bibcite{alias:undecidable}{{51}{1994}{{Ramalingam}}{{Ramalingam}}}
\bibcite{ASLR}{{52}{2001}{{Randomization}}{{Randomization}}}
\bibcite{vtpin}{{53}{2016}{{Sarbinowski et~al\unhbox \voidb@x \hbox {.}}}{{Sarbinowski, Kemerlis, Giuffrida, and Athanasopoulos}}}
\bibcite{schuster:coop}{{54}{2015}{{Schuster et~al\unhbox \voidb@x \hbox {.}}}{{Schuster, Tendyck, Liebchen, Davi, Sadeghi, and Holz}}}
\bibcite{rop:shacham}{{55}{2007}{{Shacham}}{{Shacham}}}
\bibcite{vtv:tice}{{56}{2014}{{Tice et~al\unhbox \voidb@x \hbox {.}}}{{Tice, Roeder, Collingbourne, Checkoway, Erlingsson, Lozano, and Pike}}}
\bibcite{veen:cfi}{{57}{2015}{{Veen et~al\unhbox \voidb@x \hbox {.}}}{{Veen, Andriesse, G\IeC {\"o}ktas, Gras, Sambuc, Slowinska, Bos, and Giuffrida}}}
\bibcite{veen:typearmor}{{58}{2016}{{Veen et~al\unhbox \voidb@x \hbox {.}}}{{Veen, Goktas, Contag, Pawlowski, Chen, Rawat, Bos, Holz, Athanasopoulos, and Giuffrida}}}
\bibcite{cfiguard:yuan}{{59}{2015}{{Yuan et~al\unhbox \voidb@x \hbox {.}}}{{Yuan, Zeng, and Ding}}}
\bibcite{zhang:vtrust}{{60}{2016}{{Zhang et~al\unhbox \voidb@x \hbox {.}}}{{Zhang, Carr, Li, Ding, Song, Payer, and Song}}}
\bibcite{vtint:zhang}{{61}{2015}{{Zhang et~al\unhbox \voidb@x \hbox {.}}}{{Zhang, Song, Zhijie, Chen, and Song}}}
\bibcite{ccfir:zhang}{{62}{2013}{{Zhang et~al\unhbox \voidb@x \hbox {.}}}{{Zhang, Wei, Chen, Duan, Szekeres, McCamant, Song, and Zou}}}
\bibcite{zhang:usenix}{{63}{2013}{{Zhang and Sekar}}{{Zhang and Sekar}}}
\bibcite{cfci:zhang}{{64}{2015}{{Zhang and Sekar}}{{Zhang and Sekar}}}
\newlabel{tocindent-1}{0pt}
\newlabel{tocindent0}{0pt}
\newlabel{tocindent1}{8.37pt}
\newlabel{tocindent2}{10.34999pt}
\newlabel{tocindent3}{22.194pt}
\gdef\minted@oldcachelist{,
  default-pyg-prefix.pygstyle,
  default.pygstyle,
  81FBBBCFDD5AB67B38883B29BCDB87B08F486593A96B47FBC569AA596ACDDA54.pygtex,
  C72F9367BAB08C1B93D570B2BBD0DAD539DFA78BF74BD7243FE78F2097CCFF60.pygtex}
\@LN@col{1}
\@LN@col{2}
\newlabel{TotPages}{{20}{20}{}{page.20}{}}
