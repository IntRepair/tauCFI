# Exim test configuration 4000

exim_path = EXIM_PATH
host_lookup_order = bydns
primary_hostname = myhost.test.ex
rfc1413_query_timeout = 0s
spool_directory = DIR/spool
log_file_path = DIR/spool/log/%slog
gecos_pattern = ""
gecos_name = CALLER_NAME


# ----- Main settings -----

acl_smtp_rcpt = check_rcpt
acl_smtp_data = check_data
acl_not_smtp  = check_data
acl_smtp_mime = check_mime
acl_not_smtp_mime = check_mime

av_scanner = clamd:CLAMSOCKET


# ----- ACL -----

begin acl

check_rcpt:
  accept

check_data:
  deny     message = Found $malware_name
           malware = *

  warn     spam    = nobody

  warn     set acl_m0 = $spam_score_int

  warn     message = X-Regex: Regex matched
           regex   = THIS REGEX

  warn     condition = ${if !eq{$h_fakereject:}{}}
           control   = fakereject

  warn     condition = ${if !eq{$h_fakedefer:}{}}
           control   = fakedefer

  accept

check_mime:
  warn     decode  = default
           add_header = X-$mime_part_count-content-type: $mime_content_type\n\
                        X-$mime_part_count-filename: $mime_filename\n\
                        X-$mime_part_count-charset: $mime_charset\n\
                        X-$mime_part_count-boundary: $mime_boundary\n\
                        X-$mime_part_count-content-disposition: $mime_content_disposition\n\
                        X-$mime_part_count-content-transfer-encoding: $mime_content_transfer_encoding\n\
                        X-$mime_part_count-content-id: $mime_content_id\n\
                        X-$mime_part_count-content-description: $mime_content_description\n\
                        X-$mime_part_count-is-multipart: $mime_is_multipart\n\
                        X-$mime_part_count-is-coverletter: $mime_is_coverletter\n\
                        X-$mime_part_count-is-rfc822: $mime_is_rfc822\n\
                        X-$mime_part_count-decode-filename: $mime_decoded_filename\n\
                        X-$mime_part_count-content-size: $mime_content_size
  warn     mime_regex = (?s)\
                        (?=Test quoted-printable =)\
                        (?=.*?Continued line with this)
           add_header = X-mime-regex: matched
  accept


# ----- Routers -----

begin routers

r1:
  driver = accept
  transport = t1
  headers_add = X-Router-SSint: \
                ${if eq {$spam_score_int}{$acl_m0}\
                {was preserved}{was not preserver}}


# ----- Transports -----

begin transports

t1:
  driver = appendfile
  file = DIR/test-mail/$local_part
  user = CALLER


# End
