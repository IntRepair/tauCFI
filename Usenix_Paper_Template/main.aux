\relax 
\providecommand{\transparent@use}[1]{}
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{N4618}
\citation{schuster:coop}
\citation{crane:readactor++}
\citation{crane:readactor++}
\citation{subversive-c:lettner}
\citation{ctf:coop}
\citation{loop:oriented}
\citation{alias:undecidable}
\citation{abadi:cfi2}
\citation{abadi:cfi}
\citation{safedispatch:jang}
\citation{haller:shrinkwrap}
\citation{vtv:tice}
\citation{bounov:interleaving}
\citation{vtv:tice}
\@LN@col{1}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{chapter:Introduction}{{1}{1}{Introduction}{section.1}{}}
\newlabel{chapter:Introduction@cref}{{[section][1][]1}{1}}
\@LN@col{2}
\citation{ccfir:zhang}
\citation{zhang:usenix}
\citation{payer:dimva}
\citation{veen:typearmor}
\citation{vci:asiaccs}
\citation{veen:typearmor}
\citation{crane:readactor++}
\citation{veen:typearmor}
\citation{zhang:vtrust}
\@LN@col{1}
\@LN@col{2}
\newlabel{Contribution}{{1}{2}{Introduction}{section.1}{}}
\newlabel{Contribution@cref}{{[section][1][]1}{2}}
\citation{iso:iecN3690}
\citation{haller:shrinkwrap}
\citation{crane:readactor++}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Graphic depicting how a COOP loop gadget works.\relax }}{3}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{Code example used to illustrate how a COOP loop gadget works}{{1}{3}{Graphic depicting how a COOP loop gadget works.\relax }{figure.caption.2}{}}
\newlabel{Code example used to illustrate how a COOP loop gadget works@cref}{{[figure][1][]1}{3}}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {2}C++ Forbidden Forward Calls Exposed}{3}{section.2}}
\newlabel{C++ Bad Forward Indirect Calls}{{2}{3}{C++ Forbidden Forward Calls Exposed}{section.2}{}}
\newlabel{C++ Bad Forward Indirect Calls@cref}{{[section][2][]2}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Polymorphism in C++ Programs}{3}{subsection.2.1}}
\newlabel{Polymorphism in C++}{{2.1}{3}{Polymorphism in C++ Programs}{subsection.2.1}{}}
\newlabel{Polymorphism in C++@cref}{{[subsection][1][2]2.1}{3}}
\@LN@col{2}
\citation{vtv:tice}
\citation{haller:shrinkwrap}
\citation{bounov:interleaving}
\citation{zhang:vtrust}
\citation{veen:typearmor}
\citation{iso:iecN3690}
\citation{byoungyoung:typecasting}
\citation{schuster:coop}
\citation{schuster:coop}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Checking Indirect Calls in Practice}{4}{subsection.2.2}}
\newlabel{C++ Indirect Calls in Practice}{{2.2}{4}{Checking Indirect Calls in Practice}{subsection.2.2}{}}
\newlabel{C++ Indirect Calls in Practice@cref}{{[subsection][2][2]2.2}{4}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Security Implications of Indirect Calls}{4}{subsection.2.3}}
\newlabel{Security Implications of Forbidden Forward Indirect Calls}{{2.3}{4}{Security Implications of Indirect Calls}{subsection.2.3}{}}
\newlabel{Security Implications of Forbidden Forward Indirect Calls@cref}{{[subsection][3][2]2.3}{4}}
\citation{veen:typearmor}
\citation{alias:undecidable}
\citation{schuster:coop}
\citation{crane:readactor++}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Imprecise Parameter-Count Policies}{5}{subsection.2.4}}
\newlabel{Too Permissive Parameter-Based Policies}{{2.4}{5}{Imprecise Parameter-Count Policies}{subsection.2.4}{}}
\newlabel{Too Permissive Parameter-Based Policies@cref}{{[subsection][4][2]2.4}{5}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Real COOP Attack Example}{5}{subsection.2.5}}
\newlabel{Running Example: CVE X}{{2.5}{5}{Real COOP Attack Example}{subsection.2.5}{}}
\newlabel{Running Example: CVE X@cref}{{[subsection][5][2]2.5}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Class inheritance hierarchy of the classes involved in the COOP attack against the Firefox browser. Red letters indicate forbidden vTble entries and green letters indicate allowed vTable entries for the given indirect callsite contained in the main loop gadget.\relax }}{5}{figure.caption.3}}
\newlabel{Class exploit}{{2}{5}{Class inheritance hierarchy of the classes involved in the COOP attack against the Firefox browser. Red letters indicate forbidden vTble entries and green letters indicate allowed vTable entries for the given indirect callsite contained in the main loop gadget.\relax }{figure.caption.3}{}}
\newlabel{Class exploit@cref}{{[figure][2][]2}{5}}
\citation{veen:typearmor}
\citation{veen:typearmor}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {3}Overview}{6}{section.3}}
\newlabel{chapter:TypeShild Overview}{{3}{6}{Overview}{section.3}{}}
\newlabel{chapter:TypeShild Overview@cref}{{[section][3][]3}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Adversary Model and Assumptions}{6}{subsection.3.1}}
\newlabel{Adversary Model}{{3.1}{6}{Adversary Model and Assumptions}{subsection.3.1}{}}
\newlabel{Adversary Model@cref}{{[subsection][1][3]3.1}{6}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Invariants for Calltargets and Callsites}{6}{subsection.3.2}}
\newlabel{Invariants for Targets and Callsites}{{3.2}{6}{Invariants for Calltargets and Callsites}{subsection.3.2}{}}
\newlabel{Invariants for Targets and Callsites@cref}{{[subsection][2][3]3.2}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}\textsc  {TypeShield} Policy Mechanism}{6}{subsection.3.3}}
\newlabel{TypeShield Policy Mechanism}{{3.3}{6}{\textsc {TypeShield} Policy Mechanism}{subsection.3.3}{}}
\newlabel{TypeShield Policy Mechanism@cref}{{[subsection][3][3]3.3}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Type and parameter count policy. Note that our type policy performs an $\wedge $ (i.e., logical and) operation between each entry in the first and second matrices. In two black circle located in $M1$ $\wedge $ $M2$ overlap on positions $M1_{i} = M2_{i} \wedge M1_{j} = M2_{j}$ than we have a match. Green circles indicate a match whereas red circles indicate a mismatch. If at least one match is present on each of the columns of the $M3$ than the indirect call transfer will be allowed by our policy, otherwise not. Note that in this example the indirect call transfer will be allowed.\relax }}{6}{figure.caption.4}}
\newlabel{Type and parameter count policy.}{{3}{6}{Type and parameter count policy. Note that our type policy performs an $\wedge $ (i.e., logical and) operation between each entry in the first and second matrices. In two black circle located in $M1$ $\wedge $ $M2$ overlap on positions $M1_{i} = M2_{i} \wedge M1_{j} = M2_{j}$ than we have a match. Green circles indicate a match whereas red circles indicate a mismatch. If at least one match is present on each of the columns of the $M3$ than the indirect call transfer will be allowed by our policy, otherwise not. Note that in this example the indirect call transfer will be allowed.\relax }{figure.caption.4}{}}
\newlabel{Type and parameter count policy.@cref}{{[figure][3][]3}{6}}
\newlabel{eqn:1}{{3.1}{6}{}{definition.3.1}{}}
\newlabel{eqn:1@cref}{{[definition][1][3]3.1}{6}}
\citation{veen:typearmor}
\citation{veen:typearmor}
\citation{veen:typearmor}
\citation{veen:typearmor}
\@LN@col{1}
\newlabel{eqn:2}{{3.2}{7}{}{definition.3.2}{}}
\newlabel{eqn:2@cref}{{[definition][2][3]3.2}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}\textsc  {TypeShield} Impact on COOP}{7}{subsection.3.4}}
\newlabel{TypeShild Impact on COOP}{{3.4}{7}{\textsc {TypeShield} Impact on COOP}{subsection.3.4}{}}
\newlabel{TypeShild Impact on COOP@cref}{{[subsection][4][3]3.4}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Parameter register wideness based lattice using 64-bit, 32-bit and 0-bit parameter wideness with six function parameters. Note that $\top $ and $\bot $ represents the top and bottom element of the lattice, respectively. An arrow (\textit  {i.e.,} in total 8) represents an indirect control flow transfer from a callsite to a calltarget. Note that\nobreakspace  {}\cite  {veen:typearmor} would allow all 8 illegal control flow transfers whereas \textsc  {TypeSchield} would forbid all of them.\relax }}{7}{figure.caption.5}}
\newlabel{fig:lattice3264}{{4}{7}{Parameter register wideness based lattice using 64-bit, 32-bit and 0-bit parameter wideness with six function parameters. Note that $\top $ and $\bot $ represents the top and bottom element of the lattice, respectively. An arrow (\textit {i.e.,} in total 8) represents an indirect control flow transfer from a callsite to a calltarget. Note that~\cite {veen:typearmor} would allow all 8 illegal control flow transfers whereas \textsc {TypeSchield} would forbid all of them.\relax }{figure.caption.5}{}}
\newlabel{fig:lattice3264@cref}{{[figure][4][]4}{7}}
\@LN@col{2}
\@writefile{toc}{\contentsline {section}{\numberline {4}Design}{7}{section.4}}
\newlabel{chapter:Design}{{4}{7}{Design}{section.4}{}}
\newlabel{chapter:Design@cref}{{[section][4][]4}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}\emph  {Count} Policy}{7}{subsection.4.1}}
\newlabel{section:countpolicy}{{4.1}{7}{\emph {Count} Policy}{subsection.4.1}{}}
\newlabel{section:countpolicy@cref}{{[subsection][1][4]4.1}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces \emph  {Count} policy classification schema for callsites and calltargets.\relax }}{7}{figure.caption.6}}
\newlabel{fig:COUNTschema}{{5}{7}{\emph {Count} policy classification schema for callsites and calltargets.\relax }{figure.caption.6}{}}
\newlabel{fig:COUNTschema@cref}{{[figure][5][]5}{7}}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}\emph  {Type} Policy}{8}{subsection.4.2}}
\newlabel{section:typepolicy}{{4.2}{8}{\emph {Type} Policy}{subsection.4.2}{}}
\newlabel{section:typepolicy@cref}{{[subsection][2][4]4.2}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces \emph  {Type} policy schema for callsites and calltargets.\relax }}{8}{figure.caption.7}}
\newlabel{fig:TYPEschema}{{6}{8}{\emph {Type} policy schema for callsites and calltargets.\relax }{figure.caption.7}{}}
\newlabel{fig:TYPEschema@cref}{{[figure][6][]6}{8}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Instruction Analysis}{8}{subsection.4.3}}
\newlabel{section:instructionanalysis}{{4.3}{8}{Instruction Analysis}{subsection.4.3}{}}
\newlabel{section:instructionanalysis@cref}{{[subsection][3][4]4.3}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Calltarget Analysis}{8}{subsection.4.4}}
\newlabel{section:calltargetanalysis}{{4.4}{8}{Calltarget Analysis}{subsection.4.4}{}}
\newlabel{section:calltargetanalysis@cref}{{[subsection][4][4]4.4}{8}}
\newlabel{subsection:livenessanalysis}{{4.4}{8}{Calltarget Analysis}{subsection.4.4}{}}
\newlabel{subsection:livenessanalysis@cref}{{[subsection][4][4]4.4}{8}}
\citation{khedker2009data}
\@LN@col{1}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Liveness analysis of a basic block.\relax }}{9}{algocf.1}}
\newlabel{alg:liveness}{{1}{9}{Calltarget Analysis}{algocf.1}{}}
\newlabel{alg:liveness@cref}{{[algorithm][1][]1}{9}}
\newlabel{eq:livenesscustom}{{1}{9}{Calltarget Analysis}{equation.0.1}{}}
\newlabel{eq:livenesscustom@cref}{{[subequation][1][]1}{9}}
\@LN@col{2}
\newlabel{subsection:requiredparamcount}{{15}{9}{Calltarget Analysis}{equation.0.1d}{}}
\newlabel{subsection:requiredparamcount@cref}{{[line][15][]15}{9}}
\newlabel{subsection:requiredparamwideness}{{15}{9}{Calltarget Analysis}{equation.0.1d}{}}
\newlabel{subsection:requiredparamwideness@cref}{{[line][15][]15}{9}}
\newlabel{subsection:variadicfunctions}{{15}{9}{Calltarget Analysis}{equation.0.1d}{}}
\newlabel{subsection:variadicfunctions@cref}{{[line][15][]15}{9}}
\citation{khedker2009data}
\@LN@col{1}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces ASM code of the \texttt  {make\_cmd} function with optimize level O2, which has a variadic parameter list.\relax }}{10}{figure.caption.9}}
\newlabel{fig:asmvariadic}{{7}{10}{ASM code of the \texttt {make\_cmd} function with optimize level O2, which has a variadic parameter list.\relax }{figure.caption.9}{}}
\newlabel{fig:asmvariadic@cref}{{[figure][7][]7}{10}}
\@LN@col{2}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Reaching definitions analysis of a basic block.\relax }}{10}{algocf.2}}
\newlabel{alg:reaching}{{2}{10}{Calltarget Analysis}{algocf.2}{}}
\newlabel{alg:reaching@cref}{{[algorithm][2][]2}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Callsite Analysis}{10}{subsection.4.5}}
\newlabel{section:callsiteanalysis}{{4.5}{10}{Callsite Analysis}{subsection.4.5}{}}
\newlabel{section:callsiteanalysis@cref}{{[subsection][5][4]4.5}{10}}
\newlabel{subsection:reachindefinitionstheory}{{4.5}{10}{Callsite Analysis}{subsection.4.5}{}}
\newlabel{subsection:reachindefinitionstheory@cref}{{[subsection][5][4]4.5}{10}}
\citation{bernat:dyninst}
\citation{dynamorio:drmemory}
\citation{veen:typearmor}
\@LN@col{1}
\newlabel{eq:livenesscustom}{{2}{11}{Callsite Analysis}{equation.0.2}{}}
\newlabel{eq:livenesscustom@cref}{{[subequation][2][]2}{11}}
\newlabel{subsection:providedparamcount}{{4.5}{11}{Callsite Analysis}{equation.0.2d}{}}
\newlabel{subsection:providedparamcount@cref}{{[subsection][5][4]4.5}{11}}
\newlabel{subsection:providedparamwideness}{{4.5}{11}{Callsite Analysis}{equation.0.2d}{}}
\newlabel{subsection:providedparamwideness@cref}{{[subsection][5][4]4.5}{11}}
\@LN@col{2}
\@writefile{toc}{\contentsline {paragraph}{Parameter Lists with \textit  {Holes}.}{11}{section*.11}}
\@writefile{toc}{\contentsline {paragraph}{Address Wideness Unterestimation.}{11}{section*.12}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Implementation}{11}{section.5}}
\newlabel{chapter:Implementation}{{5}{11}{Implementation}{section.5}{}}
\newlabel{chapter:Implementation@cref}{{[section][5][]5}{11}}
\citation{veen:typearmor}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {6}Evaluation}{12}{section.6}}
\newlabel{chapter:Evaluation}{{6}{12}{Evaluation}{section.6}{}}
\newlabel{chapter:Evaluation@cref}{{[section][6][]6}{12}}
\@LN@col{2}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Precision}{12}{subsection.6.1}}
\newlabel{section:typeshieldprecision}{{6.1}{12}{Precision}{subsection.6.1}{}}
\newlabel{section:typeshieldprecision@cref}{{[subsection][1][6]6.1}{12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.1}Quality and Applicability of Ground Truth}{12}{subsubsection.6.1.1}}
\newlabel{subsection:typeshieldprecision}{{6.1.1}{12}{Quality and Applicability of Ground Truth}{subsubsection.6.1.1}{}}
\newlabel{subsection:typeshieldprecision@cref}{{[subsubsection][1][6,1]6.1.1}{12}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Table shows the quality of structural matching provided by our automated verify and test environment, regarding callsites and calltargets when compiling with optimization level O2. The label Clang miss denotes elements not found in the data-set of the Clang/LLVM pass. The label tool miss denotes elements not found in the data-set of \textsc  {TypeShield}.\relax }}{12}{table.caption.13}}
\newlabel{tbl:matchingquality}{{1}{12}{Table shows the quality of structural matching provided by our automated verify and test environment, regarding callsites and calltargets when compiling with optimization level O2. The label Clang miss denotes elements not found in the data-set of the Clang/LLVM pass. The label tool miss denotes elements not found in the data-set of \textsc {TypeShield}.\relax }{table.caption.13}{}}
\newlabel{tbl:matchingquality@cref}{{[table][1][]1}{12}}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.2}Classification Precision (\textit  {count})}{13}{subsubsection.6.1.2}}
\newlabel{subsection:typeshieldcountprecision}{{6.1.2}{13}{Classification Precision (\textit {count})}{subsubsection.6.1.2}{}}
\newlabel{subsection:typeshieldcountprecision@cref}{{[subsubsection][2][6,1]6.1.2}{13}}
\@LN@col{2}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces The results for analysis using the \textit  {count} policy on the O2 optimization level.\relax }}{13}{table.caption.14}}
\newlabel{tbl:precisionCOUNT}{{2}{13}{The results for analysis using the \textit {count} policy on the O2 optimization level.\relax }{table.caption.14}{}}
\newlabel{tbl:precisionCOUNT@cref}{{[table][2][]2}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.3}Classification Precision (\textit  {type})}{13}{subsubsection.6.1.3}}
\newlabel{subsection:typeshieldcountprecision}{{6.1.3}{13}{Classification Precision (\textit {type})}{subsubsection.6.1.3}{}}
\newlabel{subsection:typeshieldcountprecision@cref}{{[subsubsection][3][6,1]6.1.3}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces The results for analysis using the \textit  {type} policy on the O2 optimization level.\relax }}{13}{table.caption.15}}
\newlabel{tbl:precisionTYPE}{{3}{13}{The results for analysis using the \textit {type} policy on the O2 optimization level.\relax }{table.caption.15}{}}
\newlabel{tbl:precisionTYPE@cref}{{[table][3][]3}{13}}
\@LN@col{1}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Effectiveness}{14}{subsection.6.2}}
\newlabel{section:typeshieldeffectiveness}{{6.2}{14}{Effectiveness}{subsection.6.2}{}}
\newlabel{section:typeshieldeffectiveness@cref}{{[subsection][2][6]6.2}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.2.1}Theoretical Limits.}{14}{subsubsection.6.2.1}}
\newlabel{subsection:theoreticallimit}{{6.2.1}{14}{Theoretical Limits}{subsubsection.6.2.1}{}}
\newlabel{subsection:theoreticallimit@cref}{{[subsubsection][1][6,2]6.2.1}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.2.2}Reduction achieved by \textsc  {TypeShield}}{14}{subsubsection.6.2.2}}
\newlabel{subsection:typeshieldvslimitcount}{{6.2.2}{14}{Reduction achieved by \textsc {TypeShield}}{subsubsection.6.2.2}{}}
\newlabel{subsection:typeshieldvslimitcount@cref}{{[subsubsection][2][6,2]6.2.2}{14}}
\@LN@col{2}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Benchmark run time normalized against the baseline for the SPEC CPU2006 benchmarks.\relax }}{14}{figure.caption.17}}
\newlabel{fig:awesome_image}{{8}{14}{Benchmark run time normalized against the baseline for the SPEC CPU2006 benchmarks.\relax }{figure.caption.17}{}}
\newlabel{fig:awesome_image@cref}{{[figure][8][]8}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Runtime Overhead}{14}{subsection.6.3}}
\newlabel{section:typeshieldoverheadperformance}{{6.3}{14}{Runtime Overhead}{subsection.6.3}{}}
\newlabel{section:typeshieldoverheadperformance@cref}{{[subsection][3][6]6.3}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}Instrumentation Overhead}{14}{subsection.6.4}}
\newlabel{section:typeshieldoverheadinstrumentation}{{6.4}{14}{Instrumentation Overhead}{subsection.6.4}{}}
\newlabel{section:typeshieldoverheadinstrumentation@cref}{{[subsection][4][6]6.4}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5}Security Analysis}{14}{subsection.6.5}}
\newlabel{RQ5: Security Analysis}{{6.5}{14}{Security Analysis}{subsection.6.5}{}}
\newlabel{RQ5: Security Analysis@cref}{{[subsection][5][6]6.5}{14}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces The results of comparing our implementation results with the theoretical limits for the different restriction policies combined with an address taken analysis for optimization level O2.\relax }}{15}{table.caption.16}}
\newlabel{tbl:policycompat}{{4}{15}{The results of comparing our implementation results with the theoretical limits for the different restriction policies combined with an address taken analysis for optimization level O2.\relax }{table.caption.16}{}}
\newlabel{tbl:policycompat@cref}{{[table][4][]4}{15}}
\@LN@col{1}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Postgresql -O2\relax }}{15}{figure.caption.18}}
\newlabel{fig7}{{9}{15}{Postgresql -O2\relax }{figure.caption.18}{}}
\newlabel{fig7@cref}{{[figure][9][]9}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Node.js -O2\relax }}{15}{figure.caption.18}}
\newlabel{fig8}{{10}{15}{Node.js -O2\relax }{figure.caption.18}{}}
\newlabel{fig8@cref}{{[figure][10][]10}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Proftpd -O2\relax }}{15}{figure.caption.18}}
\newlabel{fig9}{{11}{15}{Proftpd -O2\relax }{figure.caption.18}{}}
\newlabel{fig9@cref}{{[figure][11][]11}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Mysql -O2\relax }}{15}{figure.caption.18}}
\newlabel{fig10}{{12}{15}{Mysql -O2\relax }{figure.caption.18}{}}
\newlabel{fig10@cref}{{[figure][12][]12}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6}Comparison with Other Tools}{15}{subsection.6.6}}
\newlabel{RQ5: Is TypeShield better than other tools?}{{6.6}{15}{Comparison with Other Tools}{subsection.6.6}{}}
\newlabel{RQ5: Is TypeShield better than other tools?@cref}{{[subsection][6][6]6.6}{15}}
\@LN@col{2}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces The medians of calltargets per callsite for different programs. Smaller geomean values are better. Note that \textsc  {TypeShield} currently does not include function return types as TypeArmor does.\relax }}{15}{table.caption.19}}
\newlabel{tbl:toolcompare}{{5}{15}{The medians of calltargets per callsite for different programs. Smaller geomean values are better. Note that \textsc {TypeShield} currently does not include function return types as TypeArmor does.\relax }{table.caption.19}{}}
\newlabel{tbl:toolcompare@cref}{{[table][5][]5}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Discussion}{15}{section.7}}
\newlabel{chapter:Discussion}{{7}{15}{Discussion}{section.7}{}}
\newlabel{chapter:Discussion@cref}{{[section][7][]7}{15}}
\newlabel{section:comptype}{{7}{15}{Discussion}{section.7}{}}
\newlabel{section:comptype@cref}{{[section][7][]7}{15}}
\citation{dang:asiaccs}
\citation{conti:ccs}
\citation{vtv:tice}
\@LN@col{1}
\newlabel{section:discrep}{{7}{16}{Discussion}{section.7}{}}
\newlabel{section:discrep@cref}{{[section][7][]7}{16}}
\newlabel{section:venuesimp}{{7}{16}{Discussion}{section.7}{}}
\newlabel{section:venuesimp@cref}{{[section][7][]7}{16}}
\@LN@col{2}
\newlabel{section:limit}{{7}{16}{Discussion}{section.7}{}}
\newlabel{section:limit@cref}{{[section][7][]7}{16}}
\citation{carlini:bending}
\citation{andriesse:indepth}
\citation{alan:mycroft}
\citation{lin:rewards}
\citation{bap:brumley}
\citation{fokin:smartdec}
\citation{divine:balakrishnan}
\citation{caballero:inference}
\citation{crane:readactor++}
\citation{schuster:coop}
\citation{subversive-c:lettner}
\citation{loop:oriented}
\citation{abadi:cfi2}
\citation{abadi:cfi}
\citation{intel:cet}
\citation{windows:cfguard}
\citation{safedispatch:jang}
\citation{vtv:tice}
\citation{crane:readactor++}
\citation{zhang:vtrust}
\citation{volodymyr:cpi}
\citation{haller:shrinkwrap}
\citation{vtv:tice}
\citation{safedispatch:jang}
\citation{zhang:vtrust}
\citation{crane:readactor++}
\citation{volodymyr:cpi}
\citation{bounov:interleaving}
\citation{vfuard:aravind}
\citation{vtint:zhang}
\citation{veen:typearmor}
\citation{veen:typearmor}
\@LN@col{1}
\@writefile{toc}{\contentsline {section}{\numberline {8}Related Work}{17}{section.8}}
\newlabel{chapter:Related_Work}{{8}{17}{Related Work}{section.8}{}}
\newlabel{chapter:Related_Work@cref}{{[section][8][]8}{17}}
\newlabel{Type-Inference on Executables}{{8}{17}{Related Work}{section.8}{}}
\newlabel{Type-Inference on Executables@cref}{{[section][8][]8}{17}}
\newlabel{Mitigation of Advanced Code-Reuse Attacks}{{8}{17}{Related Work}{section.8}{}}
\newlabel{Mitigation of Advanced Code-Reuse Attacks@cref}{{[section][8][]8}{17}}
\@LN@col{2}
\citation{intel:cet}
\citation{windows:cfguard}
\citation{veen:cfi}
\citation{dep}
\citation{ASLR}
\citation{ROP}
\citation{kornau:rop}
\citation{rop:shacham}
\citation{JOP1}
\citation{JOP2}
\citation{JOP3}
\citation{rop:carlini}
\citation{veen:cfi}
\citation{ccfir:zhang}
\citation{cfci:zhang}
\citation{mohan:opaque}
\citation{ccfi:jose}
\citation{pblocker:prakash}
\citation{dynaguard:petsios}
\citation{cfiguard:yuan}
\citation{mcfi:niu}
\citation{rockjit:niu}
\citation{perinput:niu}
\@LN@col{1}
\newlabel{Mitigation of Code-Reuse Attacks}{{8}{18}{Related Work}{section.8}{}}
\newlabel{Mitigation of Code-Reuse Attacks@cref}{{[section][8][]8}{18}}
\@LN@col{2}
\@writefile{toc}{\contentsline {section}{\numberline {9}Future Work}{18}{section.9}}
\newlabel{chapter:Future_Work}{{9}{18}{Future Work}{section.9}{}}
\newlabel{chapter:Future_Work@cref}{{[section][9][]9}{18}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Conclusion}{18}{section.10}}
\newlabel{chapter:Conclusion}{{10}{18}{Conclusion}{section.10}{}}
\newlabel{chapter:Conclusion@cref}{{[section][10][]10}{18}}
\bibstyle{acm}
\bibdata{literatur.bib}
\bibcite{ctf:coop}{1}
\bibcite{dynamorio:drmemory}{2}
\bibcite{windows:cfguard}{3}
\bibcite{N4618}{4}
\bibcite{intel:cet}{5}
\bibcite{abadi:cfi2}{6}
\bibcite{abadi:cfi}{7}
\bibcite{andriesse:indepth}{8}
\bibcite{divine:balakrishnan}{9}
\bibcite{bernat:dyninst}{10}
\bibcite{JOP1}{11}
\bibcite{bounov:interleaving}{12}
\bibcite{bap:brumley}{13}
\bibcite{ROP}{14}
\bibcite{caballero:inference}{15}
\bibcite{carlini:bending}{16}
\bibcite{rop:carlini}{17}
\bibcite{JOP2}{18}
\bibcite{conti:ccs}{19}
\bibcite{crane:readactor++}{20}
\bibcite{dang:asiaccs}{21}
\bibcite{JOP3}{22}
\bibcite{vci:asiaccs}{23}
\bibcite{fokin:smartdec}{24}
\bibcite{haller:shrinkwrap}{25}
\bibcite{safedispatch:jang}{26}
\bibcite{iso:iecN3690}{27}
\bibcite{khedker2009data}{28}
\bibcite{kornau:rop}{29}
\bibcite{volodymyr:cpi}{30}
\bibcite{loop:oriented}{31}
\bibcite{byoungyoung:typecasting}{32}
\bibcite{subversive-c:lettner}{33}
\bibcite{lin:rewards}{34}
\bibcite{ccfi:jose}{35}
\bibcite{dep}{36}
\@LN@col{1}
\@LN@col{2}
\bibcite{mohan:opaque}{37}
\bibcite{alan:mycroft}{38}
\bibcite{mcfi:niu}{39}
\bibcite{rockjit:niu}{40}
\bibcite{perinput:niu}{41}
\bibcite{payer:dimva}{42}
\bibcite{dynaguard:petsios}{43}
\bibcite{vfuard:aravind}{44}
\bibcite{pblocker:prakash}{45}
\bibcite{alias:undecidable}{46}
\bibcite{ASLR}{47}
\bibcite{schuster:coop}{48}
\bibcite{rop:shacham}{49}
\bibcite{vtv:tice}{50}
\bibcite{veen:cfi}{51}
\bibcite{veen:typearmor}{52}
\bibcite{cfiguard:yuan}{53}
\bibcite{zhang:vtrust}{54}
\bibcite{vtint:zhang}{55}
\bibcite{ccfir:zhang}{56}
\bibcite{zhang:usenix}{57}
\bibcite{cfci:zhang}{58}
\gdef\minted@oldcachelist{,
  default-pyg-prefix.pygstyle,
  default.pygstyle,
  4DB23247858650DF7EEB0A890003D3578F486593A96B47FBC569AA596ACDDA54.pygtex}
\@LN@col{1}
\@LN@col{2}
